import{_ as t,c as i,o,ak as l}from"./chunks/framework.CVFSIJ6L.js";const g=JSON.parse('{"title":"Python 简介","description":"","frontmatter":{},"headers":[],"relativePath":"guide/introduction.md","filePath":"guide/introduction.md"}'),e={name:"guide/introduction.md"};function n(r,a,d,c,s,h){return o(),i("div",null,a[0]||(a[0]=[l('<h1 id="python-简介" tabindex="-1">Python 简介 <a class="header-anchor" href="#python-简介" aria-label="Permalink to &quot;Python 简介&quot;">​</a></h1><p>Python 是一种流行的编程语言，由荷兰人 Guido van Rossum 创造，并于 1991 年首次发布。它以简洁、可读性强的语法而闻名，被广泛用于 Web 开发、数据科学、人工智能等领域。</p><div class="interactive-code-block" data-lang="py" data-title="" data-code="cHJpbnQoIkhlbGxvLCBXb3JsZCEiKQo=" data-runnable="true"></div><h2 id="python-的基本特性" tabindex="-1">Python 的基本特性 <a class="header-anchor" href="#python-的基本特性" aria-label="Permalink to &quot;Python 的基本特性&quot;">​</a></h2><h3 id="解释型语言" tabindex="-1">解释型语言 <a class="header-anchor" href="#解释型语言" aria-label="Permalink to &quot;解释型语言&quot;">​</a></h3><p>Python 是解释型语言，与 JavaScript 类似，代码无需编译即可运行。你可以立即执行代码并看到结果，这使得开发和测试变得非常快速。</p><h3 id="简洁的语法" tabindex="-1">简洁的语法 <a class="header-anchor" href="#简洁的语法" aria-label="Permalink to &quot;简洁的语法&quot;">​</a></h3><p>Python 使用缩进来表示代码层次，语法接近自然语言：</p><div class="interactive-code-block" data-lang="py" data-title="" data-code="YWdlID0gMjUKaWYgYWdlID49IDE4OgogICAgcHJpbnQoIuS9oOW3sue7j+aIkOW5tOS6hiIpCmVsc2U6CiAgICBwcmludCgi5L2g6L+Y5pyq5oiQ5bm0IikK" data-runnable="true"></div><h3 id="动态类型" tabindex="-1">动态类型 <a class="header-anchor" href="#动态类型" aria-label="Permalink to &quot;动态类型&quot;">​</a></h3><p>Python 是动态类型语言，变量的类型在运行时确定，不需要事先声明：</p><div class="interactive-code-block" data-lang="py" data-title="" data-code="IyDlj5jph4/nsbvlnovnlLHotYvlgLzlhoXlrrnlhrPlrpoKbmFtZSA9ICJQeXRob24iICAgICAgIyDlrZfnrKbkuLIKdmVyc2lvbiA9IDMuMTIgICAgICAgIyDmlbTmlbAgIAppc19hd2Vzb21lID0gVHJ1ZSAgICAjIOW4g+WwlOWAvAoKcHJpbnQoZiJ7bmFtZX0ge3ZlcnNpb259IGlzIGF3ZXNvbWU6IHtpc19hd2Vzb21lfSIpCgojIOWPmOmHj+WPr+S7pemHjeaWsOi1i+WAvOS4uuS4jeWQjOexu+WeiwpuYW1lID0gMTAwCnByaW50KGYi546w5ZyoIG5hbWUg5pivOiB7dHlwZShuYW1lKX0iKQo=" data-runnable="true"></div><h3 id="跨平台兼容" tabindex="-1">跨平台兼容 <a class="header-anchor" href="#跨平台兼容" aria-label="Permalink to &quot;跨平台兼容&quot;">​</a></h3><p>Python 可以在 Windows、Mac、Linux 等不同平台上运行，代码具有很强的可移植性。</p><h2 id="python-的应用领域" tabindex="-1">Python 的应用领域 <a class="header-anchor" href="#python-的应用领域" aria-label="Permalink to &quot;Python 的应用领域&quot;">​</a></h2><ul><li><strong>Web 开发（后端）</strong>：Django、Flask、FastAPI 等框架</li><li><strong>数据科学</strong>：数据分析、可视化、统计计算</li><li><strong>人工智能</strong>：机器学习、深度学习、大模型应用</li><li><strong>自动化脚本</strong>：系统管理、文件处理、网络爬虫</li><li><strong>桌面应用</strong>：GUI 程序开发</li><li><strong>科学计算</strong>：数值计算、工程计算</li></ul><h2 id="ai-与机器学习" tabindex="-1">AI 与机器学习 <a class="header-anchor" href="#ai-与机器学习" aria-label="Permalink to &quot;AI 与机器学习&quot;">​</a></h2><p>Python 已成为 AI 开发的首选语言，拥有丰富的生态系统：</p><h3 id="主要-ai-库" tabindex="-1">主要 AI 库 <a class="header-anchor" href="#主要-ai-库" aria-label="Permalink to &quot;主要 AI 库&quot;">​</a></h3><ul><li><strong>OpenAI</strong>：调用 GPT 等大模型</li><li><strong>LangChain</strong>：构建 AI 应用框架</li><li><strong>Transformers</strong>：Hugging Face 预训练模型</li><li><strong>TensorFlow/PyTorch</strong>：深度学习框架</li></ul><h3 id="简单示例" tabindex="-1">简单示例 <a class="header-anchor" href="#简单示例" aria-label="Permalink to &quot;简单示例&quot;">​</a></h3><div class="interactive-code-block" data-lang="py" data-title="" data-code="IyBPcGVuQUkgQVBJIOiwg+eUqO+8iOmcgOimgeWuieijhSBvcGVuYWkg5bqT77yJCmltcG9ydCBvcGVuYWkKCmNsaWVudCA9IG9wZW5haS5PcGVuQUkoYXBpX2tleT0ieW91ci1rZXkiKQpyZXNwb25zZSA9IGNsaWVudC5jaGF0LmNvbXBsZXRpb25zLmNyZWF0ZSgKICAgIG1vZGVsPSJncHQtMy41LXR1cmJvIiwKICAgIG1lc3NhZ2VzPVt7InJvbGUiOiAidXNlciIsICJjb250ZW50IjogIuino+mHiuacuuWZqOWtpuS5oCJ9XQopCnByaW50KHJlc3BvbnNlLmNob2ljZXNbMF0ubWVzc2FnZS5jb250ZW50KQo=" data-runnable="false"></div><p>Python 在 AI 领域的优势：</p><ul><li>简洁的 API 设计</li><li>强大的数据处理能力</li><li>活跃的开源社区</li><li>完整的开发工具链</li></ul><p>对于前端开发者来说，学习 Python 能够帮助你构建全栈 AI 应用，从前端交互到后端 AI 服务。</p><h2 id="对比-javascript" tabindex="-1">对比 JavaScript <a class="header-anchor" href="#对比-javascript" aria-label="Permalink to &quot;对比 JavaScript&quot;">​</a></h2><p>作为前端开发者，了解核心差异能帮你快速上手：</p><p><strong>语法结构</strong>：</p><div class="interactive-code-block" data-lang="js" data-title="" data-code="Ly8gSmF2YVNjcmlwdCDkvb/nlKjlpKfmi6zlj7cKaWYgKGFnZSA+PSAxOCkgewogICAgY29uc29sZS5sb2coIuaIkOW5tOS6uiIpOwp9Cg==" data-runnable="true"></div><div class="interactive-code-block" data-lang="py" data-title="" data-code="IyBQeXRob24g5L2/55So57yp6L+bCmFnZSA9IDI1CmlmIGFnZSA+PSAxODoKICAgIHByaW50KCLmiJDlubTkuroiKQo=" data-runnable="true"></div><p><strong>命名规范</strong>：</p><ul><li>JavaScript：<code>userName</code>（驼峰命名）</li><li>Python：<code>user_name</code>（下划线命名）</li></ul><p><strong>布尔值</strong>：</p><ul><li>JavaScript：<code>true/false</code></li><li>Python：<code>True/False</code>（首字母大写）</li></ul><p><strong>运行环境</strong>：</p><ul><li>JavaScript：浏览器/Node.js</li><li>Python：系统解释器，更适合后端和数据处理</li></ul>',36)]))}const p=t(e,[["render",n]]);export{g as __pageData,p as default};
